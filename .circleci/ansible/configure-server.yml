---

- name: "configuration play." 
  hosts: web
  user: ubuntu
  become: true
  become_method: sudo
  become_user: root  
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml

  pre_tasks:
    # - name: "wait 600 seconds for target connection to become reachable/usable."
    #   ansible.builtin.wait_for_connection:
    #     delay: 5
    #     timeout: 60
    - name: Print env variable
      shell: python3 --version
      register: print_result
    # - name: "install python for Ansible."
    #   become: yes
    #   register: pythonInstall
    #   apt:
    #     name: 
    #       - python3
    #     state: latest
    #     update_cache: 
    - name: "print python version"    
      debug: 
        msg: "{{ print_result.stdout_lines }}"   
    
    # - name : validate the python installation
    #   debug: msg="Installation of python is Successfull"
    #   when: pythonInstall is changed

  # Get the environment variables from CircleCI and add to the EC2 instance
  environment:
    - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"
    - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
    - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
    - TYPEORM_PORT: 5431
    - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
    - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
    - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
    - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
    - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"


  roles:
    # - configure-server
    # - configure-prometheus-node-exporter